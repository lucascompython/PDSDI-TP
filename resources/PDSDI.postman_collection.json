{
	"info": {
		"_postman_id": "122b3b81-322c-44d6-bcd7-6ff44ff3f693",
		"name": "PDSDI",
		"description": "Postman Collection for this project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19509548"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "check",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"lucas\",\n    \"age\": 19\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/check",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"check"
							]
						},
						"description": "Route for checking user authentication"
					},
					"response": []
				},
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"gui\",\n    \"email\": \"gui@gmail.com\",\n    \"password\": \"1234\",\n    \"admin\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"register"
							]
						},
						"description": "Route for registering a new user\n\n  \nReturns 200 OK if the user was registered successfully  \nReturns 400 Bad Request if user already exists  \nReturns 500 Internal Server Error if something unexpected happend"
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"joao@gmail.com\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/user/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"login"
							]
						},
						"description": "Route for user to login\n\n  \nReturns 200 OK if the user was logged in successfully  \nReturns 401 Unauthorized if user did not login successfully"
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/user/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"logout"
							]
						},
						"description": "Route for user to logout, deletes the cookie"
					},
					"response": []
				},
				{
					"name": "protected",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/protected",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"protected"
							]
						},
						"description": "Test route that only admins have access to"
					},
					"response": []
				}
			]
		},
		{
			"name": "clothes",
			"item": [
				{
					"name": "get_clothe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/clothes/get",
							"host": [
								"{{host}}"
							],
							"path": [
								"clothes",
								"get"
							]
						},
						"description": "Route to get all the clothes from a givern user"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "0.0.0.0:1234",
			"type": "string"
		}
	]
}