---
import Layout from "@layouts/Layout.astro";
import NavBar from "@components/NavBar.astro";
import Footer from "@components/Footer.astro";
import ClothesOutfitsSelect from "@components/ClothesOutfitsSelect.svelte";
import Search from "@components/Icons/SearchIcon.svg?raw";

import { getLangFromUrl, useTranslations } from "src/i18n/utils";

const t = useTranslations(getLangFromUrl(Astro.url));
---

<Layout title="Clothe Match">
  <main>
    <NavBar />
    <div class="div-1">
      <label class="input input-bordered searchbar">
        <input type="text" class="grow" placeholder="Search" />
        <Fragment set:html={Search} />
      </label>
      <label class="checkboxInput">
        <span id="toggle-label" class="mr-2">{t("clothes.clothes")}</span>
        <input
          id="clothe-toggle"
          type="checkbox"
          checked={false}
          class="toggle"
        />
      </label>
    </div>
    <div class="div-2 grid-container">
      <ClothesOutfitsSelect client:load windowLocation={Astro.url} />
    </div>
    <Footer />
  </main>
</Layout>

<style>
  main {
    background-color: #d9d9d9;
    color: white;
    display: flex;
    flex-direction: column;
    flex: 1;
  }
  :global(.dark) main {
    background-color: #0d1117;
  }
  .div-1 {
    display: flex;
    flex: 1;
    margin-top: 1rem;
    max-height: 5vh;
    padding-bottom: 1rem;
  }
  .div-2 {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    flex: 1;
    max-height: 80vh;
    overflow: auto;
  }
  .searchbar {
    background-color: var(--bg-color);
    color: var(--text-color);
    width: 89%;
    display: flex;
    justify-content: center;
    margin: auto;
    margin-left: 2%;
  }
  .checkboxInput {
    color: var(--text-color);
    display: flex;
    margin-top: auto;
    margin-bottom: auto;
    margin-left: 2%;
    margin-right: 2%;
  }
  input[type="checkbox"].toggle {
    color: var(--text-color);
  }
  .grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    width: 100%;
    padding: 1rem;
    justify-items: center;
  }
  @media only screen and (max-width: 1210px) {
    .grid-container {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  @media only screen and (max-width: 820px) {
    .grid-container {
      grid-template-columns: repeat(1, 1fr);
    }
  }
</style>
