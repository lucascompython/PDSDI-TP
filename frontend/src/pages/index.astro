---
import Layout from "@layouts/Layout.astro";
import NavBar from "@components/NavBar.astro";
import AddButton from "@components/AddButton.astro";
import GenerateOutfit from "@components/GenerateOutfitsButton.astro";
import Footer from "@components/Footer.astro";
import LastOutfit from "@components/LastOutfit.svelte";

import { getLangFromUrl, useTranslations } from "src/i18n/utils";
const t = useTranslations(getLangFromUrl(Astro.url));
---

<Layout title="Clothe Match">
  <main>
    <NavBar />
    <div class="split-screen">
      <div class="left">
        <div class="left top buttons">
          <AddButton />
          <span class="subtitle">{t("nav.upload")}</span>
        </div>
        <div class="left buttons">
          <GenerateOutfit />
          <span class="subtitle">{t("nav.generate")}</span>
        </div>
      </div>
      <div class="right">
        <div class="grid-container background">
          <LastOutfit client:load windowLocation={Astro.url} />
        </div>
      </div>
    </div>
    <Footer />
  </main>

  <style>
    main {
      background-color: #d9d9d9;
      color: white;
      display: flex;
      flex-direction: column;
      height: 100vh;
      flex: 1;
    }
    .background {
      background-color: var(--bg-color);
      color: var(--text-color);
    }
    .split-screen {
      flex: 1;
      display: flex;
      position: relative;
    }
    .left {
      flex-basis: 50%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      overflow: hidden;
    }
    .buttons {
      align-items: center;
      justify-content: center;
      border-right: 3px solid #b3b1b1;
    }
    .top {
      border-bottom: 3px solid #b3b1b1;
    }
    :global(.dark) main {
      background-color: #0d1117;
    }
    .right {
      flex-basis: 50%;
      max-height: 85vh;
      overflow: auto;
    }
    .subtitle {
      display: block;
      font-size: 0.9rem;
      color: var(--text-color);
      padding-top: 1rem;
    }
    .grid-container {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
      width: 100%;
      padding: 1rem;
      justify-items: center;
    }

    @media only screen and (max-width: 1210px) {
      .grid-container {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    @media only screen and (max-width: 820px) {
      .grid-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        flex: 1;
      }
    }
  </style>
</Layout>
